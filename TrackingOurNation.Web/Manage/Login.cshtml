@using System.Web.Optimization;
@{
    // Initialize general page variables
    var email = "";
    var password = "";
    var rememberMe = false;

    var returnUrl = Request.QueryString["ReturnUrl"];
    if (returnUrl.IsEmpty()) {
        returnUrl = Href("~/");
    }

    // Setup validation
    Validation.RequireField("username", "You must specify an email address.");
    Validation.RequireField("password", "You must specify a password.");
    Validation.Add("password",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "Password must be at least 6 characters"));

    // If this is a POST request, validate and process data
    if (IsPost) {
        AntiForgery.Validate();
        if (Validation.IsValid()) {
            email = Request.Form["username"];
            password = Request.Form["password"];
            //rememberMe = Request.Form["rememberMe"].AsBool();

            if (WebSecurity.UserExists(email) && WebSecurity.GetPasswordFailuresSinceLastSuccess(email) > 4 && WebSecurity.GetLastPasswordFailureDate(email).AddSeconds(60) > DateTime.UtcNow) {
                ModelState.AddFormError("Too many Login failures. Account is now locked. Contact your administrator.");
                return;
            }

            // Attempt to log in using provided credentials
            if (WebSecurity.Login(email, password, rememberMe)) {
                if (Roles.IsUserInRole("Master")){
                    WebSecurity.Logout();
                    Response.Redirect("~/Master/Login"); //If Master Admin then go to the Dash
                    return;
                }else{
                    var db = Database.Open("AdminDB");
                    var sql = "SELECT * FROM UserProfile WHERE Email = @0";
                    var userDets = db.QuerySingle(sql, email);
                    var daClub = userDets.ClubID.ToString();  
                    Session["xCLUB"] = daClub;
                    var db2 = Database.Open("BrandNewDB");
                    var sqlGetClub = "SELECT * FROM CLUBS WHERE ClubID = '" + daClub + "'";
                    var clubDetails = db2.QuerySingle(sqlGetClub);
                    Session["xCLUBName"] = clubDetails.ClubName;
                    Context.RedirectLocal(returnUrl);
                    return;                                       
                }
            } else {
                ModelState.AddFormError("The user name or password provided is incorrect. Too many failed attempts will result in your IP address being recorded.");
            }
        }
    }
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
    <head>
        <title>Admin Login</title>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
        <meta name="viewport" content="width=device-width" />
        <link rel="shortcut icon" href="~/wwwwroot/favicon.ico" type="image/x-icon" />
        <link href="~/wwwroot/lib/bootstrap/bootstrap.css" rel="stylesheet" />
        <link href="~/wwwroot/css/xCustom.css" rel="stylesheet" />
    </head>
    <body class="login">
        <div class="logo">
            <img src="~/wwwroot/images/ton_logo-sm.png" alt="Golfison" />
        </div>
        <div class="content">
            <form class="login-form" method="POST" action="" accept-charset="UTF-8">
                @AntiForgery.GetHtml()
                <h3 class="form-title">Login to your account</h3>
                <div class="alert alert-danger">
                    @Html.ValidationMessage("username")
                    @Html.ValidationMessage("password")
                    @Html.ValidationSummary("", excludeFieldErrors: true, htmlAttributes: null)
                </div>
                <div class="form-group">
                    <!--ie8, ie9 does not support html5 placeholder, so we just show field title for that-->
                    <label class="control-label visible-ie8 visible-ie9">Username</label>
                    <div class="input-icon">
                        <i class="fa fa-user"></i>
                        <input id="username" class="form-control placeholder-no-fix" type="text" autocomplete="off" placeholder="Username" name="username" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label visible-ie8 visible-ie9">Password</label>
                    <div class="input-icon">
                        <i class="fa fa-lock"></i>
                        <input id="password" class="form-control placeholder-no-fix" type="password" autocomplete="off" placeholder="Password" name="password" />
                    </div>
                </div>
                <div class="form-actions">
                    @*<label class="checkbox">
                        <input type="checkbox" id="rememberMe" name="remember" value="true" checked="@rememberMe" /> Remember me
                    </label>*@
                    <button type="submit" class="btn green pull-right">
                        Login <i class="m-icon-swapright m-icon-white"></i>
                    </button>
                </div>
            </form>
</body>
</html>



